/////////////////////////////////////////////////////
//// CS 8803/4803 CGAI: Computer Graphics in AI Era
//// Assignment 1B: Neural SDF
/////////////////////////////////////////////////////

precision highp float;              //// set default precision of float variables to high precision

varying vec2 vUv;                   //// screen uv coordinates (varying, from vertex shader)
uniform vec2 iResolution;           //// screen resolution (uniform, from CPU)
uniform float iTime;                //// time elapsed (uniform, from CPU)

#define PI 3.1415925359

const vec3 CAM_POS = vec3(0, 1, 0);

vec3 rotate(vec3 p, vec3 ax, float ro)
{
    return mix(dot(p, ax) * ax, p, cos(ro)) + sin(ro) * cross(ax, p);
}

/////////////////////////////////////////////////////
//// sdf functions
/////////////////////////////////////////////////////

float sdfPlane(vec3 p, float h)
{
    return p.y - h;
}

float sdfBunny(vec3 p)
{
    p = rotate(p, vec3(1., 0., 0.), PI / 2.);
    p = rotate(p, vec3(0., 0., 1.), PI / 2. + PI / 1.);

    // sdf is undefined outside the unit sphere, uncomment to witness the abominations
    if(length(p) > 1.0)
    {
        return length(p) - 0.9;
    }

    //// neural network weights for the bunny 

    vec4 f0_0=sin(p.y*vec4(1.74,-2.67,1.91,-1.93)+p.z*vec4(2.15,-3.05,.50,-1.32)+p.x*vec4(2.47,.30,-2.00,-2.75)+vec4(1.31,6.89,-8.25,.15));
    vec4 f0_1=sin(p.y*vec4(-.72,-3.13,4.36,-3.50)+p.z*vec4(3.39,3.58,-4.52,-1.10)+p.x*vec4(-1.02,-2.90,2.23,-.62)+vec4(1.61,-.84,-2.00,-.47));
    vec4 f0_2=sin(p.y*vec4(-1.47,.32,-.70,-1.51)+p.z*vec4(.17,.75,3.59,4.05)+p.x*vec4(-3.10,1.40,4.72,2.90)+vec4(-6.76,-6.43,2.41,-.66));
    vec4 f0_3=sin(p.y*vec4(-2.75,1.59,3.43,-3.39)+p.z*vec4(4.09,4.09,-2.34,1.23)+p.x*vec4(1.07,.65,-.18,-3.46)+vec4(-5.09,.73,3.06,3.35));
    vec4 f1_0=sin(mat4(.47,.12,-.23,-.04,.48,.06,-.24,.19,.12,.72,-.08,.39,.37,-.14,-.01,.06)*f0_0+
        mat4(-.62,-.40,-.81,-.30,-.34,.08,.26,.37,-.16,.38,-.09,.36,.02,-.50,.34,-.38)*f0_1+
        mat4(-.26,-.51,-.32,.32,-.67,.35,-.43,.93,.12,.34,.07,-.01,.67,.27,.43,-.02)*f0_2+
        mat4(.02,-.18,-.15,-.10,.47,-.07,.82,-.46,.18,.44,.39,-.94,-.20,-.28,-.20,.29)*f0_3+
        vec4(-.09,-3.49,2.17,-1.45))/1.0+f0_0;
    vec4 f1_1=sin(mat4(-.46,-.33,-.85,-.57,.41,.87,.25,.58,-.47,.16,-.14,-.06,-.70,-.82,-.20,.47)*f0_0+
        mat4(-.15,-.73,-.46,-.58,-.54,-.34,-.02,.12,.55,.32,.22,-.87,-.57,-.28,-.51,.10)*f0_1+
        mat4(.75,1.06,-.08,-.17,-.43,.69,1.07,.23,.46,-.02,.10,-.11,.21,-.70,-.08,-.48)*f0_2+
        mat4(.04,-.09,-.51,-.06,1.12,-.21,-.35,-.17,-.95,.49,.22,.99,.62,-.25,.06,-.20)*f0_3+
        vec4(-.61,2.91,-.17,.71))/1.0+f0_1;
    vec4 f1_2=sin(mat4(.01,-.86,-.07,.46,.73,-.28,.83,.12,.16,.33,.28,-.55,-.21,-.02,.53,-.15)*f0_0+
        mat4(-.28,-.32,.19,-.28,.24,-.23,-.61,-.39,.26,.40,.18,.41,.21,.57,-.91,-.29)*f0_1+
        mat4(.23,-.40,-1.34,-.50,.08,-.04,-1.67,-.16,-.65,-.09,.38,-.22,-.14,-.34,.37,.05)*f0_2+
        mat4(-.47,-.23,-.57,-.05,.51,.04,.00,.27,.80,.29,-.09,-.53,-.20,-.41,-.64,-.12)*f0_3+
        vec4(1.08,4.00,-2.54,2.18))/1.0+f0_2;
    vec4 f1_3=sin(mat4(-.30,.38,.39,.53,.73,.73,-.06,.01,.54,-.07,-.19,.68,.59,.40,.04,.07)*f0_0+
        mat4(-.17,.44,-.61,.43,-.84,-.12,.65,-.50,.33,-.31,-.28,.13,.18,-.42,.14,.08)*f0_1+
        mat4(-.78,.06,-.18,.37,-.99,.49,.71,.15,.27,-.48,-.17,.25,.05,.10,-.40,-.21)*f0_2+
        mat4(-.17,-.27,.40,.18,-.24,.23,.03,-.83,-.30,-.38,.07,.21,-.45,-.24,.78,.50)*f0_3+
        vec4(2.14,-3.48,3.81,-1.43))/1.0+f0_3;
    vec4 f2_0=sin(mat4(.83,.15,-.49,-.80,-.83,.16,1.24,.75,-.27,.18,-.13,1.05,.70,-.15,.30,.79)*f1_0+
        mat4(-.38,-.17,.34,.67,-.39,.09,.48,-.93,.19,.60,-.20,-.22,-.76,-.62,-.40,.01)*f1_1+
        mat4(.10,.22,.08,.13,-.42,-.11,.71,-.63,.02,.46,-.07,-.46,-.37,.07,.15,.14)*f1_2+
        mat4(.09,-.48,-.38,.40,-.57,-.88,-.14,-.25,.20,.95,.86,-1.08,.46,.04,.53,-.82)*f1_3+
        vec4(3.47,-3.66,3.06,.84))/1.4+f1_0;
    vec4 f2_1=sin(mat4(1.03,.03,-.76,-.03,.84,.66,-.49,.74,-.09,-.85,-.55,.17,.07,.85,-.55,-.20)*f1_0+
        mat4(-.55,1.13,.41,-.21,-.55,.19,.49,.67,.40,1.80,-.82,-.83,-1.02,.78,-.42,-.51)*f1_1+
        mat4(.77,-.88,.64,1.10,-.49,1.05,-.43,-.38,.66,-.63,.02,.11,-.24,-.23,.49,-.65)*f1_2+
        mat4(-.66,1.90,.02,-.48,.22,-.62,-.68,-.44,.52,-.57,.16,-.61,-.03,-.02,-.88,-.23)*f1_3+
        vec4(.58,-3.00,-2.53,.14))/1.4+f1_1;
    vec4 f2_2=sin(mat4(-.44,-.06,.30,-.37,.27,-.23,-.56,.15,.03,-.14,-.08,.72,.76,-.58,.55,.29)*f1_0+
        mat4(.31,.23,.42,-.17,.37,-.05,.39,.46,-1.14,.32,.06,-.28,.28,-.21,-.58,.62)*f1_1+
        mat4(.92,-.16,.86,-.09,-.12,.33,-.49,-.24,.29,-.19,.95,-.40,-.87,.08,.08,-.71)*f1_2+
        mat4(-.45,.67,1.07,-.14,-.56,.06,-.81,-.15,-.57,-.24,-1.09,.69,-.44,-.32,-.00,-.07)*f1_3+
        vec4(-4.43,-1.86,-2.87,1.45))/1.4+f1_2;
    vec4 f2_3=sin(mat4(.58,.25,.01,-.54,.34,.56,.61,-.79,-.01,.05,-.57,-1.31,.74,.78,-.10,-.11)*f1_0+
        mat4(-.03,-.48,-.24,.01,.10,.23,.22,-.05,.76,.29,-.37,.02,.54,-.07,.27,.38)*f1_1+
        mat4(.31,-1.03,.24,.95,.80,.29,.43,.61,-.04,-.22,-.06,-.52,-.46,.35,.07,-.07)*f1_2+
        mat4(.47,-.12,-.62,.06,.47,-.41,.53,-2.14,-.59,.16,.74,-.58,.32,.66,-.30,-.18)*f1_3+
        vec4(-2.86,-3.27,-.55,2.87))/1.4+f1_3;
    return dot(f2_0,vec4(-.08,.03,.07,-.03))+
        dot(f2_1,vec4(-.03,-.02,-.06,-.07))+
        dot(f2_2,vec4(.05,-.09,.03,.11))+
        dot(f2_3,vec4(.03,.06,-.06,-.03))+
        -0.014;
}

/////////////////////////////////////////////////////
//// Step 1: training a neural SDF model
//// You are asked to train your own neural SDF model on Colab. 
//// Your implementation should take place in neural_sdf.ipynb.
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 2: copy neural SDF weights to GLSL
//// In this step, you are asked to the network weights you have trained from the text file to the function sdfCow().
//// You should replace the default implementation (a sphere) with your own network weights. 
/////////////////////////////////////////////////////
float sdfDuck(vec3 p)
{
    p = rotate(p, vec3(1., 0., 0.), PI / 2.);
    p = rotate(p, vec3(0., 0., 1.), PI / 3. + PI/3.0);

    // sdf is undefined outside the unit sphere, uncomment to witness the abominations
    if(length(p) > 1.)
    {
        return length(p) - 0.9;
    }
    vec4 f0_0=sin(p.y*vec4(2.86,1.47,-1.59,.73)+p.z*vec4(-1.23,-3.67,3.37,4.14)+p.x*vec4(-1.37,-2.23,-1.47,1.87)+vec4(-2.71,6.22,-3.74,4.83));
vec4 f0_1=sin(p.y*vec4(-2.07,1.47,3.55,2.54)+p.z*vec4(-3.54,2.98,-.14,1.40)+p.x*vec4(-2.72,-.04,.92,-2.73)+vec4(5.12,-4.09,-4.59,-6.47));
vec4 f0_2=sin(p.y*vec4(-1.47,-2.44,-3.62,-2.78)+p.z*vec4(1.21,1.12,3.63,1.86)+p.x*vec4(.16,-4.32,2.12,1.42)+vec4(-.58,2.25,4.42,-2.10));
vec4 f0_3=sin(p.y*vec4(-2.97,1.16,-3.00,-3.66)+p.z*vec4(1.20,-1.43,4.58,2.76)+p.x*vec4(-4.28,-.24,2.83,-3.07)+vec4(-5.75,-.20,-3.82,.80));
vec4 f1_0=sin(mat4(.65,-.25,-.21,-.30,-.43,.01,.09,-.12,-.71,-.35,-.07,.34,.04,-.42,.16,.33)*f0_0+
    mat4(-.34,-.20,-.13,.45,-.44,.24,-.70,.13,.17,-.53,-.08,-.17,-.04,.10,.13,-.16)*f0_1+
    mat4(.06,.30,-.24,.23,.06,-.28,-.63,-.05,.05,-.17,.36,-.11,.00,-.22,-.73,-.33)*f0_2+
    mat4(.49,-.35,.29,-.29,-.85,.25,.18,.40,-.08,.21,-.05,-.09,.10,-.23,-.11,-.15)*f0_3+
    vec4(-2.05,-1.46,.90,2.69))/1.0+f0_0;
vec4 f1_1=sin(mat4(.60,.54,-.22,.15,.29,.47,-.54,-.12,-.18,.26,-.45,.22,-.57,-.40,-.29,.22)*f0_0+
    mat4(.06,.41,-.08,-.03,-.34,-.08,-.21,-.01,-.34,.02,-.21,-.14,.22,-.06,.20,.79)*f0_1+
    mat4(.56,-.35,.23,.14,-.32,-.21,.48,-.23,-.31,-.45,-.16,.11,.01,-.26,-.08,.24)*f0_2+
    mat4(-.25,-.23,.25,-.22,-.57,-.07,-.34,.89,-.36,-.36,.32,.17,-.09,-.12,-.27,.15)*f0_3+
    vec4(-.04,-.88,3.08,2.76))/1.0+f0_1;
vec4 f1_2=sin(mat4(-.16,.47,-.16,.46,.26,-.56,-.12,-.19,-.06,.16,.67,-1.03,-.06,.04,-.17,-.37)*f0_0+
    mat4(.18,.15,.36,-.14,.43,-.58,-.22,.07,-.10,-.06,-.24,.45,.44,-.18,-.13,-.19)*f0_1+
    mat4(.56,.27,-.35,.11,-.10,.21,.15,-.11,.33,-.04,.38,.30,-.28,-.06,.12,.03)*f0_2+
    mat4(-.06,.18,-.27,-.31,-.33,-.54,.32,-.11,.18,.00,-.12,.10,-.04,-.11,-.13,-.15)*f0_3+
    vec4(.01,.51,-3.04,3.14))/1.0+f0_2;
vec4 f1_3=sin(mat4(.02,.15,.20,.58,-.11,.08,.17,-.27,-.09,.26,.52,-.10,.20,-.47,.06,-.33)*f0_0+
    mat4(-.44,.21,.20,.06,-.26,.02,-.36,-.22,.57,.23,-.08,.10,.40,-.19,.22,-.05)*f0_1+
    mat4(.48,.58,-.15,-.29,.00,.00,-.09,.18,.47,-.27,.13,-.23,.49,.12,.06,-.04)*f0_2+
    mat4(-.40,.27,-.32,-.15,.46,.55,.12,-.16,.09,.20,.52,-.30,-.01,-.06,.49,.26)*f0_3+
    vec4(.55,2.66,-3.75,-1.90))/1.0+f0_3;
vec4 f2_0=sin(mat4(.72,-.29,-.61,-.42,-.33,.34,-.42,.21,-.53,-.06,.62,-.02,.02,.32,-.57,.29)*f1_0+
    mat4(-.36,.17,-.10,-.15,.39,-.27,-.24,.17,.06,.35,.05,-.02,-.21,-.26,-.07,-.22)*f1_1+
    mat4(-.20,-.43,.18,.28,.29,.42,.25,.08,-.20,.39,.31,.29,-.43,-.26,.53,.24)*f1_2+
    mat4(.36,-.37,-.05,.20,-.30,-.22,-.54,.31,-.52,-.33,.21,-.25,.06,.41,.37,-.74)*f1_3+
    vec4(3.51,-1.56,-2.74,.90))/1.4+f1_0;
vec4 f2_1=sin(mat4(.58,-.48,-.35,-.14,-.10,-.50,-.14,.25,-.23,.36,.17,.22,.57,.25,-.10,-.40)*f1_0+
    mat4(-.32,-.53,.33,-.33,.66,-.40,-.15,-.16,.36,-.04,-.70,.37,-.19,.13,.28,.44)*f1_1+
    mat4(-.15,-.23,-.41,.42,.38,-.62,.06,-.21,.37,.01,.60,-.56,-.23,.32,.40,-.36)*f1_2+
    mat4(-.20,-.33,-.48,-.27,.72,.15,-.13,-.05,-.21,-.58,-.30,.27,.10,-.19,.26,.51)*f1_3+
    vec4(-3.49,-2.85,.20,2.16))/1.4+f1_1;
vec4 f2_2=sin(mat4(.58,.58,.38,-.28,-.20,.25,.28,-.37,-.38,-.20,.14,.56,.43,.30,.30,.60)*f1_0+
    mat4(.29,.13,.17,-.40,.41,.60,.86,.05,-.26,-.60,.24,-.51,-.24,-.64,.25,-.66)*f1_1+
    mat4(-.33,-.28,-.54,-.50,-.02,.18,-.11,-.31,.27,.06,.24,-.36,-.49,.24,-.69,-.02)*f1_2+
    mat4(-.12,.53,.26,-.25,.11,.31,.60,.02,.03,.30,-.25,-.32,-.29,-.27,-.03,.53)*f1_3+
    vec4(-1.15,-3.20,2.70,1.95))/1.4+f1_2;
vec4 f2_3=sin(mat4(-.07,.10,.12,-.30,-.11,-.15,.00,.22,-.30,.27,-.01,-.01,.57,-.17,-.59,.25)*f1_0+
    mat4(.06,-.16,.06,-.08,1.22,-.12,-.11,-.29,.02,.20,.08,.29,-.12,.06,.81,.00)*f1_1+
    mat4(-.35,.08,-.11,-.03,-.03,.41,.16,.48,-.05,-.55,.66,-.02,.13,-.01,.66,.48)*f1_2+
    mat4(.44,.02,.02,-.13,-.54,.74,.51,.11,.02,.37,-.05,.11,-.28,-.45,-.34,-.51)*f1_3+
    vec4(-1.26,.47,.62,-2.29))/1.4+f1_3;
vec4 f3_0=sin(mat4(-.57,-.15,.43,-.11,-.69,.04,.67,-.48,.37,-.60,-.54,.02,.05,-.41,-.02,-.67)*f2_0+
    mat4(-.50,.52,.08,.19,.19,-.30,.48,.15,-.46,-.30,.32,.15,.22,.24,-.25,-.36)*f2_1+
    mat4(-.05,.64,.54,.11,.22,-.27,.21,-.14,-.01,.04,.51,.26,-.07,.06,-.34,-.23)*f2_2+
    mat4(.46,.13,-.12,-.56,.77,-.42,-.06,-.43,.20,-.48,-.57,.18,-.31,.57,.03,.57)*f2_3+
    vec4(-1.47,.89,2.70,-2.43))/1.7+f2_0;
vec4 f3_1=sin(mat4(-.42,.49,-.03,.04,-.63,-.49,.20,-.53,.20,.43,-.64,.70,.44,1.08,-.79,.71)*f2_0+
    mat4(-.07,.00,.06,-.18,-.05,.04,.12,-.60,.05,.43,-.05,-.22,-.48,.48,-.27,.21)*f2_1+
    mat4(-.28,-.45,.21,.43,-.26,.04,-.36,-.09,-.30,.09,.14,.33,.15,.17,.01,.44)*f2_2+
    mat4(-.43,.80,-.21,-.15,.39,-.59,-.49,.01,.19,.37,-.41,.30,-.27,-.01,-.15,.40)*f2_3+
    vec4(3.70,-.16,2.84,.54))/1.7+f2_1;
vec4 f3_2=sin(mat4(.26,.35,-.68,-.05,.34,-.21,-.47,-.13,-.17,-.25,-.16,.26,-.20,-.30,.01,.43)*f2_0+
    mat4(-.20,.16,-.11,.47,-.42,-.34,-.29,.22,-.08,-.03,-.04,-.40,-.42,-.31,-.08,.25)*f2_1+
    mat4(.56,.03,-.33,.24,.14,-.09,-.56,-.14,-.65,.56,-.50,.22,-.19,.19,.13,.04)*f2_2+
    mat4(.34,-.35,-.10,-.16,.08,.53,.52,-.03,.35,.45,-.17,-.39,.47,-.29,.25,.40)*f2_3+
    vec4(.54,.18,3.17,-1.70))/1.7+f2_2;
vec4 f3_3=sin(mat4(-.62,.28,-.44,.17,.27,.25,-.37,.22,.04,.18,-.05,-.58,.36,-.32,-.32,-.24)*f2_0+
    mat4(.33,.05,.31,-.68,.17,-.68,-.08,.19,.41,-.02,-.44,.33,-.01,.51,.57,-.21)*f2_1+
    mat4(-.16,-.13,.60,-.42,.33,-.10,-.52,-.20,.04,-.11,-.07,.29,-.12,.08,-.12,.47)*f2_2+
    mat4(.33,-.39,.46,.38,.20,-.09,-.36,.09,-.30,.21,.16,.30,.56,.41,-.23,.27)*f2_3+
    vec4(-1.72,1.87,-.53,1.18))/1.7+f2_3;
vec4 f4_0=sin(mat4(-.30,.35,-.53,-.49,.12,-.15,.40,.22,-.26,-.44,-.27,.24,.08,-.79,.66,.60)*f3_0+
    mat4(-.28,.17,.43,.14,-.62,.49,-.19,-.00,-.02,.41,.18,.61,-.30,-.93,-.53,.40)*f3_1+
    mat4(-.21,-.11,.29,-.45,-.23,-.48,.01,.08,.35,.46,-.38,-.25,-.06,.43,.41,-.11)*f3_2+
    mat4(-.53,-.00,-.19,-.25,-.21,-.74,.20,-.08,.31,-.00,.56,.57,-.04,.28,-.30,.04)*f3_3+
    vec4(.19,-.31,3.31,-.97))/2.0+f3_0;
vec4 f4_1=sin(mat4(-.10,-.25,-.17,-.54,.53,.50,-.17,-.41,-.68,.19,.41,.02,-.28,-.22,-.14,-.02)*f3_0+
    mat4(-.01,.21,.41,1.06,.10,-.38,-.27,-.24,.25,-.14,.15,.27,-.68,-.92,-.36,-.31)*f3_1+
    mat4(-.42,.25,.39,.08,-.48,.46,-.75,-.47,-.11,.28,.42,.49,-.57,-.44,.20,.33)*f3_2+
    mat4(-.27,.40,-.03,-.03,-.16,-.46,-.46,-.50,-.39,.31,-.33,.28,.01,-.28,.09,.04)*f3_3+
    vec4(1.38,-2.07,3.38,.46))/2.0+f3_1;
vec4 f4_2=sin(mat4(-.11,-.15,.08,-.51,.15,-.45,.15,-.20,.06,.24,-.08,.35,-.44,.32,-.49,.28)*f3_0+
    mat4(-.80,.20,.20,-.37,-.41,.18,-.27,.36,-.50,.35,-.31,-.18,.11,.46,-.31,.41)*f3_1+
    mat4(.07,-.38,.05,-.15,-.14,.20,-.11,-.32,-.11,-.07,-.29,-.52,-.51,.16,.24,-.55)*f3_2+
    mat4(-.14,-.31,.42,.16,-.46,-.63,-.45,-.24,.18,-.00,-.64,-.74,.08,.60,-.13,.37)*f3_3+
    vec4(.71,.65,-2.06,1.17))/2.0+f3_2;
vec4 f4_3=sin(mat4(.02,.45,-.31,.52,-.21,-.39,.21,.04,-.77,.18,-.19,.42,-.15,-.82,.20,.38)*f3_0+
    mat4(.69,.40,-.60,.52,.38,.27,.13,.50,-.38,.32,.18,-.36,.05,.26,.78,-.50)*f3_1+
    mat4(-.11,-.15,.53,.31,.52,.08,.45,.04,.71,-.21,.01,-.31,.20,.42,-.25,.43)*f3_2+
    mat4(-.08,-.05,-.35,.54,-.52,-.03,.55,-.41,-.17,.37,-.26,-.01,-.15,.32,-.30,-.03)*f3_3+
    vec4(1.41,1.90,-.47,1.36))/2.0+f3_3;
vec4 f5_0=sin(mat4(-.12,-1.06,-.19,.37,-.46,-.62,.15,-.59,-.01,-.88,.54,.39,-.12,.12,-.16,.34)*f4_0+
    mat4(-.74,-.52,-.18,.43,-.41,.09,-.79,.44,.10,.61,-.48,-.38,.01,-.87,-.02,.22)*f4_1+
    mat4(.57,.70,-.47,.23,.34,-.58,.20,-.43,-.11,.59,-.04,-.98,-.04,-.14,.12,-.23)*f4_2+
    mat4(.17,-1.01,.53,-.37,.31,.27,.32,.39,-.92,-.76,.20,.01,-.26,.93,-.14,-.01)*f4_3+
    vec4(1.85,1.43,2.88,2.98))/2.2+f4_0;
vec4 f5_1=sin(mat4(-.02,.21,.19,.50,.34,.64,-.24,.19,.16,-.56,-.02,-.37,.37,-.06,.16,-.17)*f4_0+
    mat4(-.20,.67,.39,-.49,-.28,.51,-.30,.54,.57,-.17,-.21,-.20,-.00,.19,-.58,-.55)*f4_1+
    mat4(-.81,.47,.31,-.04,.27,.70,.44,.19,.17,-.70,.32,-.48,-.13,.44,.45,-.40)*f4_2+
    mat4(.14,.40,.48,.40,.09,.33,-.64,.59,1.03,.27,-.22,-.06,.39,.45,.63,-.19)*f4_3+
    vec4(-1.93,-3.42,-2.34,-2.66))/2.2+f4_1;
vec4 f5_2=sin(mat4(.16,.05,-.17,.33,-.48,-.23,-.20,.47,.08,.38,-.07,-.69,.05,-.11,.16,.10)*f4_0+
    mat4(.70,.36,-.55,-.12,-.52,.27,-.50,-.20,-.18,-.22,-.54,.06,-.16,-.19,-.09,-.11)*f4_1+
    mat4(-.56,-.60,-.32,.05,.38,.40,.17,.03,-.06,.15,.34,.58,-.11,-.23,-.45,.30)*f4_2+
    mat4(.41,.19,.01,-.60,-.08,-.37,-.15,.42,-.73,.18,-.01,-.05,-.25,.12,.14,.02)*f4_3+
    vec4(2.09,1.29,-.21,2.36))/2.2+f4_2;
vec4 f5_3=sin(mat4(.37,-.15,-.66,.14,.33,-.05,.05,.20,.30,.13,.06,.21,-.23,-.48,.45,-.60)*f4_0+
    mat4(.50,.01,.09,.14,.17,.17,.21,.12,-.47,-.07,.29,.69,-.15,-.02,-.29,-.25)*f4_1+
    mat4(-.09,-.07,-.09,-.71,.83,.02,.37,.33,.29,.20,-.01,.08,-.22,.07,.05,.06)*f4_2+
    mat4(-.63,.56,-.25,-.46,-.11,-.32,-.56,.25,.68,-.46,.07,.45,-.58,-.49,.10,-.13)*f4_3+
    vec4(-2.38,-3.08,1.64,-2.75))/2.2+f4_3;
return dot(f5_0,vec4(.02,-.01,-.04,.06))+
    dot(f5_1,vec4(.02,-.01,.02,.03))+
    dot(f5_2,vec4(-.04,.06,.03,-.03))+
    dot(f5_3,vec4(-.03,.03,.03,-.04))+
    -0.220;
}

float sdfTeddy(vec3 p)
{
    p = rotate(p, vec3(1., 0., 0.), PI / 2.);
    p = rotate(p, vec3(0., 0., 1.), PI / 3. + PI/3.0);

    // sdf is undefined outside the unit sphere, uncomment to witness the abominations
    if(length(p) > 1.)
    {
        return length(p) - 0.9;
    }
vec4 f0_0=sin(p.y*vec4(-1.05,3.58,-2.18,-.79)+p.z*vec4(.06,4.35,3.93,.76)+p.x*vec4(-3.96,2.90,-.79,1.49)+vec4(6.96,-2.16,-6.18,6.31));
vec4 f0_1=sin(p.y*vec4(.24,-3.42,-3.10,1.00)+p.z*vec4(-.73,-2.45,-4.12,1.00)+p.x*vec4(3.28,1.99,-4.19,-2.31)+vec4(-1.12,-8.42,5.27,-2.93));
vec4 f0_2=sin(p.y*vec4(-3.57,-3.41,-1.91,-3.91)+p.z*vec4(2.50,.55,1.64,-2.96)+p.x*vec4(4.53,3.79,1.66,-4.32)+vec4(-6.68,-.18,.02,4.95));
vec4 f0_3=sin(p.y*vec4(-4.37,.59,2.98,1.78)+p.z*vec4(1.46,.68,.88,3.64)+p.x*vec4(4.31,2.14,-1.29,-1.69)+vec4(-8.08,3.70,8.19,8.29));
vec4 f1_0=sin(mat4(-.28,-.05,.12,-.00,-.12,-.17,.31,.16,-.25,.07,.15,-.53,-.22,-.80,-.39,-.29)*f0_0+
    mat4(.59,-.20,.00,.13,-.24,-.00,.24,-.40,-.34,-.50,-.16,-.03,.18,-.15,-.22,.22)*f0_1+
    mat4(-.07,-.02,.14,-.01,-.40,-.10,-.64,-.32,.39,.53,.50,-.26,.16,-.08,-.33,.11)*f0_2+
    mat4(.27,.34,-.13,-.25,-.29,-.49,-.41,.40,-.26,-.24,.01,-.15,-.20,.35,.14,.02)*f0_3+
    vec4(-2.27,.57,-3.72,.95))/1.0+f0_0;
vec4 f1_1=sin(mat4(.11,.26,-.24,.32,.19,.13,-.41,.06,.03,.05,-.28,-.06,.13,-.33,.06,-.15)*f0_0+
    mat4(1.02,-.62,.17,.34,-.40,.15,-.25,-.52,.28,-.40,.58,-.24,-.73,.44,.30,-.11)*f0_1+
    mat4(-.26,-.21,-.58,.20,.09,-.06,.26,-.40,-.28,.69,.18,.54,-.15,.31,-.44,-.01)*f0_2+
    mat4(.04,-.53,.24,.03,-.05,-.46,.62,.35,-.13,-.11,.18,-.54,-.44,-.16,.57,-.29)*f0_3+
    vec4(-3.19,-2.78,3.35,-1.87))/1.0+f0_1;
vec4 f1_2=sin(mat4(-.46,.37,-.22,.20,.22,-.08,.18,.12,-.51,-.63,.20,.26,-.01,.18,-.11,-.58)*f0_0+
    mat4(-.72,-.40,.45,-.19,.31,.44,.04,-.38,-.46,.08,.54,-.42,.30,.02,.55,.22)*f0_1+
    mat4(-.02,.40,.01,-.05,.33,-.44,.60,-.25,-.22,-.44,-.04,-.32,-.11,.29,-.45,.17)*f0_2+
    mat4(.11,.11,-.06,-.37,-.23,-.37,.52,.33,-.17,-.07,.11,.01,.33,.45,-.09,.62)*f0_3+
    vec4(-3.60,2.40,-1.49,-1.15))/1.0+f0_2;
vec4 f1_3=sin(mat4(-.18,-.04,.14,.73,-.25,.11,-.13,.22,-.19,-.23,-.06,-.11,-.19,.33,.74,.66)*f0_0+
    mat4(.39,.54,-.25,.07,-.28,.08,.28,.25,.26,-.15,-.25,-.19,.51,.21,-.26,.58)*f0_1+
    mat4(.25,-.27,.18,.27,.57,-.37,-.14,-.40,.59,.41,.05,-.39,.04,-.08,.40,.30)*f0_2+
    mat4(-.22,-.12,.23,-.51,-.38,-.16,.23,-.58,-.21,-.22,.07,.45,-.43,.48,.42,.28)*f0_3+
    vec4(1.08,-.40,-.44,1.92))/1.0+f0_3;
vec4 f2_0=sin(mat4(.22,-.38,.07,-.34,.57,.15,.61,.26,.33,.80,.41,-.35,.63,-.09,.22,.15)*f1_0+
    mat4(-.35,-.48,.21,-.10,-.14,-.09,-.47,-.51,-.20,.34,.23,-.25,-.11,-.24,.52,-.58)*f1_1+
    mat4(-.32,.02,.37,.29,-.34,-.58,.21,.55,.07,.60,-.33,-.06,-.22,-.68,.28,-.42)*f1_2+
    mat4(.03,-.68,.04,.35,.27,.15,.85,.22,-.41,.26,-.97,-.53,.06,-.03,.47,-.08)*f1_3+
    vec4(3.02,3.32,1.04,-1.71))/1.4+f1_0;
vec4 f2_1=sin(mat4(.53,-.24,-.47,.06,.21,-.57,.44,.20,-.34,-.12,-.39,.56,.36,-.05,-.32,.41)*f1_0+
    mat4(-.34,-.01,.69,.10,-.18,-.19,-.21,-.08,-.03,.42,-.25,.17,-.23,-.28,-.26,-.19)*f1_1+
    mat4(.71,-.45,.05,-.01,.27,-.19,.35,-.15,.28,.24,-.54,.56,.02,.26,.26,.27)*f1_2+
    mat4(-.44,.41,-.22,.08,.09,.72,-.74,.64,-.07,-.34,-.06,.46,.34,-.35,-.43,-.47)*f1_3+
    vec4(1.09,1.41,-1.56,-2.81))/1.4+f1_1;
vec4 f2_2=sin(mat4(-.54,.61,-.17,-.05,.39,-.45,.14,-.72,.82,.37,-.47,-.20,-.00,-.48,-.14,-.68)*f1_0+
    mat4(.07,.43,.27,.02,.12,-.47,.75,.20,-.03,.26,-.41,-.20,-.61,.04,.30,.59)*f1_1+
    mat4(-.44,-.64,-.20,.20,.66,-.07,-.07,-.42,-.76,-.16,.11,.23,.53,-.24,.87,-.35)*f1_2+
    mat4(-.42,.43,.01,-.32,-.38,-.08,-.23,-.38,-.28,-.21,-.06,.41,-.36,.36,-.09,-.00)*f1_3+
    vec4(3.82,1.76,-.73,2.57))/1.4+f1_2;
vec4 f2_3=sin(mat4(-.13,-.12,.22,-.75,-.39,.07,.45,.08,-.49,.27,.32,.18,-.74,.23,-.52,-.58)*f1_0+
    mat4(.00,-.99,.32,-.24,-.33,.15,.22,-.34,-.14,.45,.17,-.33,-.20,-.40,-.35,-.02)*f1_1+
    mat4(-.05,-.10,-.34,-.12,.48,.08,-.17,.38,-.04,-.03,-.10,-.54,.39,-.37,-.44,-.18)*f1_2+
    mat4(.36,-.20,-.30,-.67,-.59,.57,-.32,.02,-.36,.17,.64,-.33,.04,.20,-.81,-.31)*f1_3+
    vec4(-2.35,3.65,.28,2.68))/1.4+f1_3;
vec4 f3_0=sin(mat4(-.22,-.61,-.93,-.52,.69,.05,.36,.34,.74,.29,.40,-.28,.71,.56,.05,-.28)*f2_0+
    mat4(-.43,-.20,.91,.41,-.16,.04,-.20,.53,-.69,-.30,-.22,.22,.40,.91,-.03,-.58)*f2_1+
    mat4(-.47,-.24,.19,.18,.13,.10,-.12,.36,-.13,.46,-.32,.71,-.07,.23,.17,-.18)*f2_2+
    mat4(-.34,.17,.15,-.05,-.07,-.61,-.33,-.50,.33,.29,.37,.61,.67,.72,.67,-.46)*f2_3+
    vec4(1.92,-.58,2.27,2.84))/1.7+f2_0;
vec4 f3_1=sin(mat4(-.12,.03,-.28,-.08,-.32,.67,.11,-.50,-.32,.07,.58,.01,.15,.24,.29,.43)*f2_0+
    mat4(-.40,-.11,.35,.74,.63,-.32,.66,-.29,-.63,.05,-.38,-.16,.23,.06,-.53,-.00)*f2_1+
    mat4(-.32,-.56,-.14,-.02,-.18,.05,.17,-.39,.32,.24,-.22,.00,-.30,.23,.04,.28)*f2_2+
    mat4(.06,-.25,.35,.14,-.16,.74,.24,.55,.58,-.28,.12,.71,-.34,-.45,.54,-.42)*f2_3+
    vec4(1.99,1.10,2.98,2.35))/1.7+f2_1;
vec4 f3_2=sin(mat4(-.29,-.34,-.66,-.62,.48,-.31,.07,.64,-.90,.21,-.25,.06,-.23,-.90,1.27,.27)*f2_0+
    mat4(-.05,.40,-.26,.06,-.39,-.20,-.05,-.12,.59,-.15,-.10,-.66,.40,.52,.07,.21)*f2_1+
    mat4(-.37,.24,-.20,-.55,.50,.12,.34,.67,-.65,.12,.08,-.45,-.05,.37,.33,.29)*f2_2+
    mat4(-.13,-.76,.11,.33,.63,.42,.47,.03,-.43,-.46,-.30,-.13,.57,.24,-.35,-.30)*f2_3+
    vec4(-3.32,.11,-2.41,-2.39))/1.7+f2_2;
vec4 f3_3=sin(mat4(.20,-.17,-.41,.11,-.38,-.47,-.03,-.25,-.33,-.55,.25,-.21,-.28,-.08,.20,-.64)*f2_0+
    mat4(-.28,-.05,.06,-.46,.71,.44,-.27,-.28,.11,-.53,.06,.17,.37,-.16,.08,-.41)*f2_1+
    mat4(.32,-.14,.25,-.53,-.05,.40,.03,.55,.44,.08,.06,-.53,.14,.58,-.19,-.62)*f2_2+
    mat4(-.09,-.06,-.01,-.48,.45,.09,.51,-.21,-.32,.09,-.40,-.48,.50,.35,-.43,-.16)*f2_3+
    vec4(2.62,-2.33,3.47,.87))/1.7+f2_3;
vec4 f4_0=sin(mat4(-.14,-.34,-.46,.45,.01,-.27,.21,-.20,.12,-.39,.05,.45,-.19,-.21,.05,-.04)*f3_0+
    mat4(-.22,-.17,.34,-.55,.06,-.24,.16,.10,-.11,.77,-.66,-.82,-.08,.00,-.03,-.46)*f3_1+
    mat4(-.45,-.12,.48,-.31,-.14,.11,-.81,-.01,.46,.14,.05,.06,-.37,-.05,.15,.15)*f3_2+
    mat4(-.26,-.15,.58,-.40,-.55,.10,.35,-.62,.60,.19,-1.08,.17,-.30,.35,.31,.21)*f3_3+
    vec4(-.37,-1.16,1.35,2.75))/2.0+f3_0;
vec4 f4_1=sin(mat4(.38,-.23,-.24,-.11,.74,-.74,-.57,-.70,.47,-.08,-.48,-.27,.26,.34,.66,-.36)*f3_0+
    mat4(-.54,-.27,-.54,-.13,-.10,-.70,-.25,.76,.04,.19,.34,-.02,-.03,.38,.69,.30)*f3_1+
    mat4(-.36,-.38,-.10,.39,-.38,.28,.55,.03,.25,.28,-.18,.51,-.13,-.09,-.32,.12)*f3_2+
    mat4(.21,.14,-.33,-.04,-.58,.66,.26,-.87,-.18,-.10,-.11,-.51,.61,.19,-.16,-.07)*f3_3+
    vec4(1.02,-3.52,1.56,-1.59))/2.0+f3_1;
vec4 f4_2=sin(mat4(.54,.74,.38,-.04,.06,.88,.48,.13,.07,-.46,.35,-.27,-.52,.72,.38,-.15)*f3_0+
    mat4(.44,.35,-.23,-.34,.19,-.09,.88,.35,.38,-.55,-.15,.32,.64,-.30,-.58,.04)*f3_1+
    mat4(-.20,-.10,.15,-.60,-.42,-.16,.34,-.24,.73,-.36,-.89,-.08,.21,.28,.49,.19)*f3_2+
    mat4(-.01,-.55,-1.10,.04,.55,.63,.45,.49,-.17,-.82,.65,.57,.15,.04,.01,-.02)*f3_3+
    vec4(-2.90,-1.24,.52,-1.04))/2.0+f3_2;
vec4 f4_3=sin(mat4(-.43,-.43,-.22,.05,-.65,.61,.44,-.65,.35,-.09,.11,-.66,.62,-.03,.02,.11)*f3_0+
    mat4(-.32,-.11,.05,1.10,.01,.24,.24,.28,-.20,.20,-.15,.19,.19,.38,.25,.55)*f3_1+
    mat4(.25,-.16,.11,-.49,-.37,.57,.36,.07,.21,-.38,-.53,-.22,.28,-.00,-.22,.03)*f3_2+
    mat4(.23,.12,.42,-.23,-.27,.02,-.59,-1.08,.39,.28,.06,.00,.75,-.11,.20,-.29)*f3_3+
    vec4(1.12,-2.67,3.71,-1.35))/2.0+f3_3;
vec4 f5_0=sin(mat4(.01,-.03,-.73,-.05,-.06,.55,1.26,.17,-.16,.42,-.29,-.05,-.21,.82,-.19,-.51)*f4_0+
    mat4(.54,.26,-.28,.02,-.20,.01,-.18,-.31,.25,-.47,.97,.49,.10,.44,-.01,-.10)*f4_1+
    mat4(.05,.48,.89,-.59,.34,.38,.40,.74,.69,-.56,-1.21,.14,.28,-.06,.73,-.15)*f4_2+
    mat4(-.21,-.22,-.05,.16,-.26,-.79,.80,-.10,-.49,.57,.90,-.89,.36,.56,.17,-.04)*f4_3+
    vec4(-2.04,-3.26,-.56,3.57))/2.2+f4_0;
vec4 f5_1=sin(mat4(-.47,-.15,-.12,.47,-.02,.85,-.21,-.29,.48,.00,-.05,-.06,-.10,.04,.27,-.21)*f4_0+
    mat4(-.78,.56,-.42,-.13,-.84,-.76,-.40,-.33,-.74,.86,-.53,-.09,.24,.44,.59,.32)*f4_1+
    mat4(-.03,-.01,-.15,-.45,.11,-.64,-.35,.05,.15,-.38,.42,-.43,-.26,-.41,.77,-.32)*f4_2+
    mat4(.13,.07,.00,.15,.15,-.29,-.00,.43,-.11,-.14,-.19,.38,-.61,-.11,-.19,-.31)*f4_3+
    vec4(-2.15,-3.19,-.20,.63))/2.2+f4_1;
vec4 f5_2=sin(mat4(-.19,-.05,.22,.11,.17,-.11,.38,.55,-.56,.88,-.06,.03,-.74,-.34,-.30,-.73)*f4_0+
    mat4(-.35,.37,.76,.65,-.24,-.48,-.69,1.01,.08,.81,1.70,.49,-.39,-.52,-.23,-.68)*f4_1+
    mat4(.26,.10,-1.43,-.58,-.28,-.31,-.76,.63,-.57,.72,.64,-.46,.46,-.01,-.34,.03)*f4_2+
    mat4(-.39,.40,.59,-.16,.10,.28,-.96,-.85,-.09,.48,.35,.74,.07,.03,-.95,.40)*f4_3+
    vec4(-1.44,1.64,2.41,-1.55))/2.2+f4_2;
vec4 f5_3=sin(mat4(.26,.66,-.07,.31,.75,.30,-.59,-.22,-.20,.02,.40,.56,.07,.59,-1.24,-.80)*f4_0+
    mat4(.25,.05,.07,.27,.22,.90,-.11,.26,-.13,-.32,.20,-.49,.54,.16,-.16,.27)*f4_1+
    mat4(.22,-.49,-.32,-.07,.46,-.08,-.31,.07,.16,.29,-.01,-.47,-.17,.23,-.32,-.80)*f4_2+
    mat4(-.84,-.41,-.01,-.33,.26,.57,.38,-.61,-.54,-.14,-.85,.07,.11,.50,-.20,.48)*f4_3+
    vec4(.31,-1.04,-3.00,-.93))/2.2+f4_3;
return dot(f5_0,vec4(-.04,-.04,.01,.06))+
    dot(f5_1,vec4(-.03,.04,-.05,-.08))+
    dot(f5_2,vec4(.04,.03,-.01,-.02))+
    dot(f5_3,vec4(.07,-.06,-.04,-.03))+
    -0.058;
}

mat3 rotateZ(float angle) {
    float c = cos(angle);
    float s = sin(angle);
    return mat3(
        c, -s, 0,
        s,  c, 0,
        0,  0, 1
    );
}
mat3 rotateX(float angle) {
    float c = cos(angle);
    float s = sin(angle);
    return mat3(
        1,  0,  0,
        0,  c, -s,
        0,  s,  c
    );
}
mat3 rotateY(float angle) {
    float c = cos(angle);
    float s = sin(angle);
    return mat3(
        c,  0,  s,
        0,  1,  0,
       -s,  0,  c
    );
}
float teddySDF_rotated(vec3 p) {
    mat3 R = rotateY(radians(-120.0));  
    vec3 rotatedP = R * p;  
    return sdfTeddy(rotatedP); 
}
float sdfCow(vec3 p)
{
    p = rotate(p, vec3(1., 0., 0.), PI / 2.);
    p = rotate(p, vec3(0., 0., 1.), PI / 3. + PI/3.0);

    // sdf is undefined outside the unit sphere, uncomment to witness the abominations
    if(length(p) > 1.)
    {
        return length(p) - 0.9;
    }

    //// your implementation starts
    vec4 f0_0=sin(p.y*vec4(-1.65,-2.39,1.40,-2.64)+p.z*vec4(-.07,4.91,-4.41,.21)+p.x*vec4(-4.31,-.94,1.93,1.97)+vec4(-3.76,-3.60,7.20,-5.29));
    vec4 f0_1=sin(p.y*vec4(.55,-3.50,1.76,-2.00)+p.z*vec4(1.93,-.16,-1.65,-3.71)+p.x*vec4(2.67,1.68,-.91,1.78)+vec4(-2.66,7.92,7.09,.66));
    vec4 f0_2=sin(p.y*vec4(-2.82,4.26,-3.35,-3.84)+p.z*vec4(1.35,-3.41,1.90,.58)+p.x*vec4(-1.37,3.07,-2.36,4.41)+vec4(-.73,-.32,-2.23,1.92));
    vec4 f0_3=sin(p.y*vec4(-4.44,.12,.60,-2.05)+p.z*vec4(-3.05,-.90,-1.45,-2.55)+p.x*vec4(1.73,-3.47,.39,-1.82)+vec4(-8.60,.42,-3.39,4.20));
    vec4 f1_0=sin(mat4(.21,.31,-.44,-.41,.46,.20,-.07,.08,-.57,.11,-.31,.08,.19,-.15,.01,-.10)*f0_0+
        mat4(.25,.09,.46,.45,-.11,.28,.19,.65,.88,-.15,-.65,.22,.38,-.10,-.11,-.27)*f0_1+
        mat4(-.00,-.33,.49,.21,.00,.15,-.04,-.30,-.46,-.53,-.25,.50,-.18,-.13,.39,.13)*f0_2+
        mat4(-.10,-.03,-.27,-.02,.54,.29,-.35,-.01,.43,-.47,-.29,-.04,-.34,-.37,-.22,-.64)*f0_3+
        vec4(2.98,2.85,2.35,-1.97))/1.0+f0_0;
    vec4 f1_1=sin(mat4(.10,.24,.06,-.20,-.15,.35,.31,-.37,-.18,.01,-.58,-.02,-.24,-.52,.71,.29)*f0_0+
        mat4(-.35,-.22,.42,.22,.13,-.48,.33,.08,.16,-.31,-.64,-.01,-.52,-.34,-.60,-.15)*f0_1+
        mat4(.60,-.77,-.22,-.31,-.07,-.00,.06,.12,.09,-.28,-.43,-.18,-.04,-.03,.01,-.37)*f0_2+
        mat4(.23,.11,.20,-.32,.20,.37,.05,-.48,.58,-.56,-.05,.38,.43,.37,-.26,.34)*f0_3+
        vec4(1.26,.95,-1.81,3.13))/1.0+f0_1;
    vec4 f1_2=sin(mat4(.28,-.49,.39,.40,-.31,.30,.14,-.02,-.38,.40,-.33,.33,-.08,-.25,-.38,-.07)*f0_0+
        mat4(.13,-.07,-.14,.83,.04,.64,.02,.16,-.46,-.22,-.42,.69,-.19,.02,.64,.13)*f0_1+
        mat4(.01,-.37,-.35,.25,.05,-.01,.49,-.25,-.48,.05,-.73,-.40,-.20,.07,-.30,-.45)*f0_2+
        mat4(.05,-.05,.30,-.08,-.07,-.47,-.14,-.28,.40,-.68,.61,.64,-.11,-.27,-.17,.16)*f0_3+
        vec4(1.35,2.88,1.34,-.78))/1.0+f0_2;
    vec4 f1_3=sin(mat4(.10,.37,.20,-.39,-.08,.12,.65,.10,.70,.06,-.50,.38,.90,.27,.38,.22)*f0_0+
        mat4(-.71,-.11,-.05,-.69,-.44,.00,.47,.44,-.72,-.21,-.75,.54,.28,-.44,-.21,-.14)*f0_1+
        mat4(-.38,-.13,-.12,.52,-.18,.17,-.19,-.24,-.43,-.02,.50,-.34,.21,.12,-.23,-.09)*f0_2+
        mat4(-.11,-.38,-.49,-.10,.40,-.30,-.36,.24,.26,-.05,.91,-.26,-.32,-.41,-.82,.26)*f0_3+
        vec4(-1.16,1.65,-2.19,3.15))/1.0+f0_3;
    vec4 f2_0=sin(mat4(.15,-.09,.14,.64,-.51,.11,.31,.19,-.08,.06,-.36,-.41,.44,.58,-.36,-.14)*f1_0+
        mat4(-.07,-.51,-.67,.30,-.38,.22,-.52,-.75,.35,.19,.57,-.05,.21,.32,.25,-.25)*f1_1+
        mat4(.02,.76,-.54,.32,-.32,.12,-.14,.51,.07,.21,.34,-.21,.44,.42,.10,-.28)*f1_2+
        mat4(.07,-.16,-.04,.25,.49,-.37,.29,-.35,.22,.32,-.52,-.01,-.27,-.21,.10,-.79)*f1_3+
        vec4(-3.36,-2.59,3.61,-1.16))/1.4+f1_0;
    vec4 f2_1=sin(mat4(-.12,-.20,.29,.27,.41,-.72,-.07,-.26,-.48,.21,-.11,-.07,.17,-.55,-.50,-.15)*f1_0+
        mat4(-.37,-.73,-.50,.13,.16,.34,-.25,.01,-.59,.02,.17,.55,.58,-.03,.57,-.11)*f1_1+
        mat4(.91,.72,.76,-.06,-.43,.24,-.40,-.15,-.09,-.18,-.09,-.23,-.54,-.40,-.36,.07)*f1_2+
        mat4(.34,-.02,.56,-.79,-.69,.06,.64,-.03,-.53,.40,.32,-.33,.10,-.42,-.30,.00)*f1_3+
        vec4(-2.52,1.70,-1.99,-3.95))/1.4+f1_1;
    vec4 f2_2=sin(mat4(.22,.21,-.52,.16,-.52,.23,-.07,.37,-.58,.14,.34,-.01,-.12,-.45,.72,-.33)*f1_0+
        mat4(.05,.43,.08,.13,-.27,-.32,.30,.22,-.58,-.26,-.15,.04,.43,.28,-.59,-.57)*f1_1+
        mat4(-.19,.34,-.49,-.64,-.10,-.55,-.22,.20,-.41,.58,-.39,-.36,.05,.10,-.05,-.33)*f1_2+
        mat4(.25,-.26,.05,-.50,.02,-.35,.18,.43,.25,.21,-.83,-.28,.32,-.09,.23,.35)*f1_3+
        vec4(.86,-2.99,1.11,.87))/1.4+f1_2;
    vec4 f2_3=sin(mat4(-.08,.44,.40,.09,.29,-.44,-.46,-.19,-.52,.23,-.27,-.17,.15,.32,-.11,-.16)*f1_0+
        mat4(-.31,.00,.01,.45,.24,.10,.24,-.16,-.48,-.81,.27,.27,.10,.09,.58,.13)*f1_1+
        mat4(.33,-.51,-.62,-.03,-.55,.12,-.45,-.25,.68,-.51,.45,-.41,.42,-.74,-.48,-.28)*f1_2+
        mat4(.32,-.42,.21,.35,.48,.33,-.26,.21,.51,.02,.58,.09,.52,.20,-.49,.25)*f1_3+
        vec4(-3.09,-2.58,-3.55,-3.84))/1.4+f1_3;
    vec4 f3_0=sin(mat4(-.19,-.30,.15,.64,-.30,-.72,.89,-.51,.02,-.48,.59,-.26,-.25,.11,-.09,.33)*f2_0+
        mat4(-.07,-.06,.25,.43,.05,-.17,-.08,.07,-.27,.21,.57,-.35,.08,.72,-.38,-.33)*f2_1+
        mat4(-.61,-.12,-.24,.15,-.06,.06,-.48,.24,-.14,-.19,-.51,-.38,-.04,.10,-.03,-.47)*f2_2+
        mat4(-.24,-.55,-.28,.10,-.06,-.55,.75,-.18,.49,.10,.48,.10,-.37,.24,.51,.03)*f2_3+
        vec4(-3.51,-2.96,-1.38,-2.76))/1.7+f2_0;
    vec4 f3_1=sin(mat4(-.53,.39,.61,-.03,-.00,-.42,-.51,-.08,.47,-.58,.37,-.44,-.51,.16,-.62,.02)*f2_0+
        mat4(-.50,-.08,.66,-.17,.05,.20,.05,.47,-.25,-.25,.73,.21,.21,.10,-.11,.06)*f2_1+
        mat4(-.30,.02,.04,.38,.10,-.80,.19,.26,.27,.41,.44,.02,.24,.21,-.34,-.41)*f2_2+
        mat4(.45,-.38,-.41,.47,-.52,-.18,-.31,.13,-.41,-.29,-.04,-.06,.34,.72,-.31,.30)*f2_3+
        vec4(2.16,-1.85,-3.26,.42))/1.7+f2_1;
    vec4 f3_2=sin(mat4(.17,.18,.12,.04,.08,.54,-.17,-.20,.62,.48,-.45,.70,.03,-.21,.52,-.38)*f2_0+
        mat4(-.82,.59,.21,.03,.79,-.32,.46,-.49,.07,-.53,-.07,.72,.72,.07,-.27,.23)*f2_1+
        mat4(.11,.31,-.36,-.70,.34,-.15,.08,.11,.40,.38,.57,-.11,-.20,-.75,.24,-.45)*f2_2+
        mat4(.32,-.30,.38,.03,-.19,-.25,.18,.55,.63,.28,.09,.16,.28,.40,-.20,.10)*f2_3+
        vec4(.97,-.89,-.29,-2.77))/1.7+f2_2;
    vec4 f3_3=sin(mat4(-.36,.01,-.14,.57,-.27,.10,.19,-.04,.15,.42,.33,-.47,.39,-.05,-.39,.20)*f2_0+
        mat4(-.35,.50,-.52,.29,-.43,.12,-.10,-.46,.46,-.35,.39,-.11,.16,-.45,.38,.52)*f2_1+
        mat4(-.71,-.46,.03,.62,-.28,.11,.01,-.28,-.57,.06,-.07,-.24,.08,-.55,.45,-.30)*f2_2+
        mat4(.02,.32,.43,-.08,.63,.32,-.21,.63,-.13,.02,.52,-.42,-.34,-.02,-.50,-.92)*f2_3+
        vec4(-1.93,.80,-2.59,-2.60))/1.7+f2_3;
    vec4 f4_0=sin(mat4(-.30,-.33,.45,.37,-.40,-.47,-.65,.31,-.57,.65,.67,-.14,-.53,-.17,-.29,-.28)*f3_0+
        mat4(-.29,.60,.21,.17,.27,.20,.05,.56,-.08,.25,.03,.40,-.39,.48,.17,-.64)*f3_1+
        mat4(-.53,-.51,-.31,-.11,-.31,.16,-.03,-.12,-.46,-.34,.39,-.49,.39,.26,-.36,.31)*f3_2+
        mat4(.22,-.74,-.37,-.14,.49,.18,.66,.24,-.62,-.26,.32,.26,.65,-.06,-.52,.51)*f3_3+
        vec4(-1.59,-2.93,.16,.45))/2.0+f3_0;
    vec4 f4_1=sin(mat4(-.38,.08,.22,.01,-.44,-.83,-.24,-.07,.13,-.20,.06,-.68,-.05,.14,-.55,.47)*f3_0+
        mat4(.17,.72,-.19,.14,-.06,.20,-.34,-.42,-.04,.22,-.32,-.06,-.39,.00,-.58,.79)*f3_1+
        mat4(.23,.14,.31,.65,.17,-.57,.24,-.61,-.24,.17,.15,.08,.84,-.03,-.00,.55)*f3_2+
        mat4(.06,.34,.10,.56,.19,-.40,.48,-.10,-.13,.78,-.72,.22,-.22,-.05,-.45,-.55)*f3_3+
        vec4(-4.32,-1.02,2.86,-.48))/2.0+f3_1;
    vec4 f4_2=sin(mat4(.03,-.16,.33,-.01,.48,-.47,.34,.50,.52,-.02,.07,-.42,.81,-.23,-.32,-.31)*f3_0+
        mat4(.67,-.60,-.37,-.12,-.11,.49,-.17,.23,.37,-.70,-.21,.16,.43,.09,.48,-.58)*f3_1+
        mat4(-.47,.74,-.54,-.55,-.32,-.18,-.15,.23,.14,-.14,-.49,-.32,.03,.03,-.44,-.58)*f3_2+
        mat4(-.59,.47,.18,-.22,-.25,-.79,-.38,-.40,-.28,-.63,.45,.72,.14,.21,.35,.15)*f3_3+
        vec4(-1.57,-3.15,3.84,-2.04))/2.0+f3_2;
    vec4 f4_3=sin(mat4(.38,.05,.06,-.46,-.15,-.27,.15,-.43,.39,.12,-.08,.13,-.23,.64,.15,.06)*f3_0+
        mat4(.25,-.82,.02,-.14,.44,.06,-.10,-.45,.29,-.53,.08,.48,.45,-.23,.04,.10)*f3_1+
        mat4(.45,-.14,.13,-.30,-.26,.55,-.57,.12,.40,.00,.07,.08,.71,.11,.14,.48)*f3_2+
        mat4(.21,.91,-.14,-.26,.52,-.05,.24,-.06,.24,.60,.35,-.01,.45,.01,-.23,-.42)*f3_3+
        vec4(-3.13,1.26,1.28,-2.31))/2.0+f3_3;
    vec4 f5_0=sin(mat4(-.34,.43,.14,-.50,-.09,.64,.08,.90,.47,.28,.79,-.07,.25,.24,-.01,.14)*f4_0+
        mat4(-.08,-.27,-.51,.64,-.11,.57,.60,.55,.01,-.50,.69,-.49,-.23,-.89,.44,.61)*f4_1+
        mat4(.81,.17,.11,.11,.45,.20,.39,-.20,-.42,.39,-.35,.30,.24,-.29,.47,.29)*f4_2+
        mat4(.02,-.20,.25,.20,-.21,-.11,.35,.23,.72,-.32,-.47,.33,.08,-.50,.40,.17)*f4_3+
        vec4(.83,-1.41,-3.09,1.92))/2.2+f4_0;
    vec4 f5_1=sin(mat4(.46,-.77,-.32,-.30,-.14,.41,-.36,.41,-.07,.11,-.21,.06,-.63,-.56,.48,-.48)*f4_0+
        mat4(-.21,.77,-.37,-.12,-.09,-.65,-.58,.57,-.42,.68,.15,.07,.57,.30,.41,-.08)*f4_1+
        mat4(.17,-.21,-.19,.05,.02,-.47,.82,.45,-.56,.04,-.04,.49,-.18,.74,.47,.68)*f4_2+
        mat4(.02,.43,.17,-.53,-.17,-.87,-.13,.42,-.10,-.40,-.35,.62,.60,.08,.65,.37)*f4_3+
        vec4(1.29,3.28,-1.04,-.69))/2.2+f4_1;
    vec4 f5_2=sin(mat4(-.18,.98,.26,.45,.67,-.28,-.31,.41,-.05,-.09,.50,.50,1.09,-.02,.50,.63)*f4_0+
        mat4(.32,.31,.31,-.39,-.30,.08,-.26,.48,.23,-.54,.17,-.20,.49,.13,-.18,.25)*f4_1+
        mat4(.58,.00,-.24,-.73,-1.22,.19,-.48,.52,.22,.04,-.04,-.21,-.32,-.68,-.06,-.03)*f4_2+
        mat4(.54,-.28,.27,.14,-.71,.39,.38,-.23,-1.04,-.75,.04,.80,-.21,.11,-.56,-.27)*f4_3+
        vec4(2.90,-2.98,-.23,3.31))/2.2+f4_2;
    vec4 f5_3=sin(mat4(-.45,.21,.10,-.10,.05,-.54,.41,-.31,-.29,.29,-.52,.64,-.34,-.16,-.37,.55)*f4_0+
        mat4(-.07,-.59,-.14,.21,.58,-.42,-.07,-1.07,-.45,.12,-.96,.64,-.44,-.88,-.30,.46)*f4_1+
        mat4(.15,.51,-.64,.71,.23,-.52,-.00,.20,-.38,.51,.14,-.54,-.34,.25,-.71,.23)*f4_2+
        mat4(-.02,.47,.11,-.56,.80,.13,.53,-.32,-.07,-.16,-.10,.03,.22,.24,.18,.47)*f4_3+
        vec4(3.92,-.68,-3.23,-1.68))/2.2+f4_3;
    return dot(f5_0,vec4(.07,.03,.03,-.05))+
        dot(f5_1,vec4(.04,-.02,.04,.03))+
        dot(f5_2,vec4(.02,-.04,-.04,.02))+
        dot(f5_3,vec4(-.05,-.03,.06,.04))+
        0.141;
    //// your implementation ends
}

float sdfUnion(float d1, float d2)
{
    return min(d1, d2);
}

/////////////////////////////////////////////////////
//// Step 3: scene sdf
//// You are asked to use the sdf boolean operations to draw the bunny and the cow in the scene.
//// The bunny is located in the ceter of vec3(-1.0, 1., 4.), and the cow is located in the center of vec3(1.0, 1., 4.).
/////////////////////////////////////////////////////

//// sdf: p - query point
float sdf(vec3 p)
{
    float s = 0.;

    float plane_h = -0.1;

    //// calculate the sdf based on all objects in the scene
    
    //// your implementation starts
    float bunny = sdfBunny(p - vec3(-2.0, 1., 4.));
    float cow = sdfCow(p - vec3(2.0, 1., 4.));
    float teddy = teddySDF_rotated(p - vec3(0.0, 1., 4.));
    s = sdfUnion(bunny, cow);
    s = sdfUnion(s, teddy);
    //// your implementation ends

    return s;
}

/////////////////////////////////////////////////////
//// ray marching
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 4: ray marching
//// You are asked to implement the ray marching algorithm within the following for-loop.
//// You are allowed to reuse your previous implementation in A1a for this function.
/////////////////////////////////////////////////////

//// ray marching: origin - ray origin; dir - ray direction 
float rayMarching(vec3 origin, vec3 dir)
{
    float s = 0.0;

    //// your implementation starts
    for(int i = 0; i < 100; i++)
    {
        vec3 p = origin + s * dir;
        float t = sdf(p);
        s += t; 
        if(t < 0.01 || s > 50.0) break;
    }
    //// your implementation ends

    return s;
}

/////////////////////////////////////////////////////
//// normal calculation
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 5: normal calculation
//// You are asked to calculate the sdf normal based on finite difference.
//// You are allowed to reuse your previous implementation in A1a for this function.
/////////////////////////////////////////////////////

//// normal: p - query point
vec3 normal(vec3 p)
{
    float s = sdf(p);          //// sdf value in p
    float dx = 0.01;           //// step size for finite difference

    //// your implementation starts
    float x = sdf(vec3(p.x + dx, p.y, p.z)) - s;
    float y = sdf(vec3(p.x, p.y + dx, p.z)) - s;
    float z = sdf(vec3(p.x, p.y, p.z + dx)) - s;
    return normalize(vec3(x, y, z));
    //// your implementation ends

}

/////////////////////////////////////////////////////
//// Phong shading
/////////////////////////////////////////////////////

/////////////////////////////////////////////////////
//// Step 6: lighting and coloring
//// You are asked to specify the color for the two neural SDF objects in the scene.
//// Each object must have a separate color without mixing.
//// Notice that we have implemented the default Phong shading model for you.
/////////////////////////////////////////////////////

vec3 phong_shading(vec3 p, vec3 n)
{
    //// background
    if(p.z > 20.0)
    {
        vec3 color = vec3(0.04, 0.16, 0.33);
        return color;
    }

    //// phong shading
    vec3 lightPos = vec3(4. * sin(iTime), 4., 4. * cos(iTime));
    vec3 l = normalize(lightPos - p);
    float amb = 0.1;
    float dif = max(dot(n, l), 0.) * 0.7;
    vec3 eye = CAM_POS;
    float spec = pow(max(dot(reflect(-l, n), normalize(eye - p)), 0.0), 128.0) * 0.9;

    vec3 sunDir = normalize(vec3(0, 1, -1)); //// parallel light direction
    float sunDif = max(dot(n, sunDir), 0.) * 0.2;

    //// shadow
    float s = rayMarching(p + n * 0.02, l);
    if(s < length(lightPos - p))
        dif *= .2;

    vec3 color = vec3(1.0);

    //// your implementation starts
    if (p.x > 0.65) {
        color = vec3(1, 0.741, 0.757);
    } else if (p.x > -0.7){
        color = vec3(0.5, 0.5, 1.0);
    } 
    else {
        color = vec3(1.0, 0.5, 1.0);
    }

    //// your implementation ends

    return (amb + dif + spec + sunDif) * color;
}

/////////////////////////////////////////////////////
//// main function
/////////////////////////////////////////////////////

void mainImage(out vec4 fragColor, in vec2 fragCoord)
{
    vec2 uv = (fragCoord.xy - .5 * iResolution.xy) / iResolution.y;         //// screen uv
    vec3 origin = CAM_POS;                                                  //// camera position 
    vec3 dir = normalize(vec3(uv.x, uv.y, 1));                              //// camera direction
    float s = rayMarching(origin, dir);                                     //// ray marching
    vec3 p = origin + dir * s;                                              //// ray-sdf intersection
    vec3 n = normal(p);                                                     //// sdf normal
    vec3 color = phong_shading(p, n);                                       //// phong shading
    fragColor = vec4(color, 1.);                                            //// fragment color
}

void main()
{
    mainImage(gl_FragColor, gl_FragCoord.xy);
}